dir()
use_r()
library(devtools)
use_r("setup_dir")
setup_dir <- function (x) {
if (is.null(x)) print("Please enter the path/to/your/directory")
if (!is.character(x)) x <- as.character(x)
if (.Platform$OS.type == "unix") {
setwd( paste0("~/", x) )
} else {
setwd( paste0("D:/", x) )
}
dir()
}
setup_dir("Dropbox")
setup_dir <- function (x) {
if (is.null(x)) print("Please enter the path/to/your/directory")
if (!is.character(x)) x <- as.character(x)
if (.Platform$OS.type == "unix") {
setwd( paste0("~/", x) )
} else {
setwd( paste0("D:/", x) )
}
print("The current directory is: ", getwd())
dir()
}
setup_dir("Dropbox")
setup_dir <- function (x) {
if (is.null(x)) print("Please enter the path/to/your/directory")
if (!is.character(x)) x <- as.character(x)
if (.Platform$OS.type == "unix") {
setwd( paste0("~/", x) )
} else {
setwd( paste0("D:/", x) )
}
current_dir <- getwd()
print("The current directory is: ", current_dir)
dir()
}
setup_dir("Dropbox")
setup_dir <- function (x) {
if (is.null(x)) print("Please enter the path/to/your/directory")
if (!is.character(x)) x <- as.character(x)
if (.Platform$OS.type == "unix") {
setwd( paste0("~/", x) )
} else {
setwd( paste0("D:/", x) )
}
current_dir <- getwd()
print(c("The current directory is: ", current_dir))
dir()
}
setup_dir("Dropbox")
setup_dir <- function (x) {
if (is.null(x)) print("Please enter the path/to/your/directory")
if (!is.character(x)) x <- as.character(x)
if (.Platform$OS.type == "unix") {
setwd( paste0("~/", x) )
} else {
setwd( paste0("D:/", x) )
}
current_dir <- getwd()
current_dir <- c("The current directory is: ", current_dir)
list(current_dir, dir())
}
setup_dir("Dropbox")
setup_dir <- function (x) {
if (is.null(x)) print("Please enter the path/to/your/directory")
if (!is.character(x)) x <- as.character(x)
if (.Platform$OS.type == "unix") {
setwd( paste0("~/", x) )
} else {
setwd( paste0("D:/", x) )
}
current_dir <- getwd()
current_dir <- c("The current directory is: ", current_dir)
list("directory" = current_dir, "contains" = dir())
}
setup_dir("Dropbox")
setup_dir <- function (x) {
if (is.null(x)) print("Please enter the path/to/your/directory")
if (!is.character(x)) x <- as.character(x)
if (.Platform$OS.type == "unix") {
setwd( paste0("~/", x) )
} else {
setwd( paste0("D:/", x) )
}
current_dir <- getwd()
current_dir <- paste0("The current directory is: ", current_dir)
list("directory" = current_dir, "contains" = dir())
}
setup_dir("Dropbox")
load_all()
setup_dir("data.management.tools")
load_all()
load_all()
setup_dir()
setup_dir(a)
load_all()
setup_dir(a)
check()
use_gpl3_license()
use_gpl3_license("Wen-Jie Tseng")
library(roxygen2)
document()
?setup_dir
check()
install()
library(data.management.tools)
setup_dir("Dropbox")
use_package("car")
use_r("Anova")
library(car)
?Anova
Anova
load_all()
setup_dir("data.management.tools")
load_all()
Anova()
document()
use_readme_rmd()
build_readme()
check()
install()
library(c("devtools", "roxygen2", "testhat", "knitr"))
library(devtools)
library(usethis)
install.packages("glue")
library(devtools)
library(usethis)
use_r(load_pkgs)
library(usethis)
library(devtools)
list.files()
dir()
load_all()
check()
use_r("read_data")
load_all()
setup_dir("Dropbox/projects/1 baking/2020 FingerMapper/06 study/")
read_dta("./formalStudy/questionnaire")
read.table()
library(data.table)
# questionnaire =============================#
question_file_names <- paste0("./formalStudy/questionnaire/", dir("./formalStudy/questionnaire"))
dtaQ <- lapply(question_file_names, function(x) read.table(x, sep = ',', header = TRUE))
dtaQ <- lapply(question_file_names, function(x) fread(x, sep = ',', header = TRUE))
dtaQ <- as.data.frame(rbindlist(dtaQ))
str(dtaQ)# make this into a function
1716/13
setup_dir("data.management.tools")
load_all
load_all()
setup_dir("D:/Dropbox/projects/1 baking/2020 FingerMapper/06 study/")
read_dta("./formalStudy/questionnaire")
read_dta("./formalStudy/questionnaire/")
library(roxygen2)
use_r("load_pkgs")
load_all
load_all()
setup_dir("D:\data.management.tools")
setup_dir("D:.data.management.tools")
setup_dir("D:/data.management.tools")
load_all()
load_pkgs()
use_r("print_data_info")
load_all()
print_data_info(3)
load_all()
print_data_info(3)
read_dta("D:/Dropbox/projects/1 baking/2020 FingerMapper/06 study/formalStudy/questionnaire/")
df <- read_dta("D:/Dropbox/projects/1 baking/2020 FingerMapper/06 study/formalStudy/questionnaire/")
print_data_info(df)
str(df)
type(str(df))
class(str(df))
load_all()
print_data_info(df)
print_data_info(df)
load_all()
print_data_info(df)
load_all()
print_data_info(df)
use_r("check_normality")
setup_dir(.)
setup_dir(".")
load_all()
setup_dir(".")
load_all()
setup_dir(".")
xx <- 1:10
skewness(xx)
kurtosis(xx)
xx <- 1:10
c(skewness(xx), kurtosis(xx))
as.matrix(c(2,1),
c(skewness(xx), kurtosis(xx)))
as.matrix(c(0, 0),
c(skewness(xx), kurtosis(xx)))
as.matrix(c(0, 0), list(c(skewness(xx), kurtosis(xx))))
matrix(c(skewness(xx), kurtosis(xx), 2, 1)
xx <- 1:10
matrix(c(skewness(xx), kurtosis(xx), 2, 1))
matrix(c(skewness(xx), kurtosis(xx)), norw= 2, ncol = 1)
matrix(c(skewness(xx), kurtosis(xx)), nrow= 2, ncol = 1)
xx <- 1:10
matrix(c(skewness(xx), kurtosis(xx)), nrow= 2, ncol = 1)
matrix(c(skewness(xx), kurtosis(xx)), nrow= 2, ncol = 1,
dimnames = list(c("skewness", "kurtosis"), c("values")) )
shapiro.test(x)
shapiro.test(xx)
summary(shapiro.test(xx))
shapiro.test(xx)
qqnorm(xx)
qqline(xx)
library(ggpubr)
install.packages("ggpubr")
ggdensity(xx, fill = "lightgray")
library(ggpubr)
ggdensity(xx, fill = "lightgray")
ggqqplot(xx)
ggdensity(xx, fill = "lightgray", alpha = 0.1)
ggdensity(xx, fill = "lightgray")
dens <- ggdensity(xx, fill = "lightgray")
qq <-ggqqplot(xx)
grid.arrange(dens, qq)
grid.arrange(dens, qq, nrow = 1)
hist(dtaS_plot$m_time,probability=T, breaks = 10)
hist(x,probability=T, breaks = 10)
hist(xx,probability=T, breaks = 10)
lines(density(xx),col=2)
ggplot() +
geom_bar(aes(x=xx))
ggplot() +
geom_bar(aes(x=xx), fill = "lightgray") + theme_bw()
ggplot() +
geom_bar(aes(x=xx), fill = "lightgray") +
geom_density() + theme_bw()
ggplot() +
geom_bar(aes(x=xx), fill = "lightgray") +
geom_density(aes(x=xx)) + theme_bw()
ggplot(aes(xx)) +
geom_histogram(aes(y=..density..), color = "black", fill = "lightgray") +
geom_density(alpha = .2, fill = "navy") + theme_bw()
ggplot(aes(x = xx)) +
geom_histogram(aes(y=..density..), color = "black", fill = "lightgray") +
geom_density(alpha = .2, fill = "navy") + theme_bw()
ggplot(mapping = aes(x = xx)) +
geom_histogram(aes(y=..density..), color = "black", fill = "lightgray") +
geom_density(alpha = .2, fill = "navy") + theme_bw()
ggplot(mapping = aes(x = xx)) +
geom_histogram(aes(y=..density..), color = "black", fill = "lightgray") +
geom_density(alpha = .2, fill = "steelblue") + theme_bw()
ggplot(mapping = aes(sample = xx)) +
stat_qq() +
stat_qq_line()
ggplot(mapping = aes(sample = xx)) +
stat_qq() +
stat_qq_line() + theme_bw()
load_all()
check_normality(xx)
load_all()
check_normality(xx)
load_all()
check_normality(xx)
summary(xx)
load_all()
check_normality(xx)
document()
check()
requireNamespace
requireNamespace(car)
requireNamespace("car")
load_all()
document()
check()
shapiro.test
check()
checkt()
check()
use_package(base)
use_package("base")
use_package("utils")
use_package("stats")
use_package("base")
c("base",
"car",
"caret",
"data.table",
"dplyr",
"ggplot2",
"gridExtra",
"Hmisc",
"moments",
"multcomp",
"nlme",
"reshape2",
"rstatix")
all<-c("base",
"car",
"caret",
"data.table",
"dplyr",
"ggplot2",
"gridExtra",
"Hmisc",
"moments",
"multcomp",
"nlme",
"reshape2",
"rstatix")
all
use_package(all)
use_package()
use_package
vapply(all, use_package)
lapply(all, use_package)
check()
document()
#' @import stats
#' @import stats
document()
document(document)
document()
document()
stats
library(stats)
check()
load_all()
rm(list = c("df"))
load_all()
document
document()
check()
document()
load_all()
document()
check()
use_package("utils")
load_all()
document()
check()
load_all()
document()
check()
check()
rbindlist
load_all()
check()
check()
use_r("globals")
check()
check()
